language: cpp
os: linux
dist: bionic

services:
   - docker

cache: # see https://docs.travis-ci.com/user/caching/
- directories:
    - $HOME/.ccache
    - $HOME/.conan
    - nix/store

env:
  global:
    - CODACY_PROJECT_TOKEN=03851e6e31c544248a4f5f799a7eac4c
    - DOCKER_WORKDIR="/workspace"
    - CONAN_UPDATE_CMD="pip3 install --upgrade conan"

notifications:
  email:
    recipients:
      - michel.estermann@bbv.ch
    on_success: change
    on_failure: always

install:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

jobs:
  include:
    - language: cpp
      name: "gcc7 coverage"
      env:
      - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_gcc7
      - COVERAGE_FILE="coverage.info"
      script:
      - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh --cov=${COVERAGE_FILE}"
      after_success:
      - bash <(curl -s https://codecov.io/bash) -f ${COVERAGE_FILE} || echo 'Codecov did not collect coverage reports'
      - bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r ${COVERAGE_FILE} || echo 'codacy did not collect coverage reports'

    - language: cpp
      name: "gcc8 debug"
      env:
      - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_gcc8
      script:
        - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh"

    - language: cpp
      name: "gcc9 debug"
      env:
      - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_gcc9
      script:
      - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh"

    - language: cpp
      name: "gcc9 release"
      env:
      - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_gcc9
      script:
      - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh -r"

    - language: cpp
      name: "clang7 debug"
      env:
      - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_clang7
      script:
      - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh"

    - language: cpp
      name: "clang8 debug"
      env:
      - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_clang8
      script:
      - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh"

    - language: cpp
      name: "clang9 debug"
      env:
      - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_clang9
      script:
      - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh"

    - language: cpp
      name: "clang9 release"
      env:
      - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_clang9
      script:
      - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh -r"

    - language: nix
      name: "nix build ninja gcc10"
      script:
      - nix-shell --command "cmake -S ${TRAVIS_BUILD_DIR} --preset=linux-ninja"
      - nix-shell --command "cmake --build --preset=linux-build"

    - language: nix
      name: "nix build ninja clang11"
      script:
      - nix-shell --command "cmake -S ${TRAVIS_BUILD_DIR} --preset=linux-ninja-clang"
      - nix-shell --command "cmake --build --preset=linux-build"
