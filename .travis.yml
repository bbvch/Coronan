---
language: cpp
os: linux
dist: bionic

services:
    - docker

cache: # see https://docs.travis-ci.com/user/caching/
    - directories:
          - $HOME/.ccache
          - $HOME/.conan
          - $HOME/.conan-clang11
          - nix/store

env:
    global:
        - CODACY_PROJECT_TOKEN=03851e6e31c544248a4f5f799a7eac4c
        - DOCKER_WORKDIR="/workspace"
        - CONAN_UPDATE_CMD="pip3 install --upgrade conan"

notifications:
    email:
        recipients:
            - michel.estermann@bbv.ch
        on_success: change
        on_failure: always

install:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

jobs:
    include:
        - os: osx
          compiler: gcc
          osx_image: xcode11.2
          addons:
              homebrew:
                  packages:
                      - qt
                  update: true
          install:
              - python3 -m pip install --upgrade pip setuptools
              - python3 -m pip install conan cmake
              - conan --version
          script:
              - ./build.sh
        - os: osx
          compiler: clang
          osx_image: xcode11.2
          addons:
              homebrew:
                  packages:
                      - qt
                  update: true
          install:
              - python3 -m pip install --upgrade pip setuptools
              - python3 -m pip install conan cmake
              - conan --version
          script:
              - ./build.sh
        - name: gcc9 debug
          env:
              - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_gcc9
              - COVERAGE_FILE="coverage.info"
          script:
              - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh
                --cov=${COVERAGE_FILE}"
          after_success:
              - bash <(curl -s https://codecov.io/bash) -f ${COVERAGE_FILE} || echo 'Codecov did not collect coverage reports'
              - bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r ${COVERAGE_FILE} || echo 'codacy did not collect coverage reports'

        - name: gcc9 release
          env:
              - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_gcc9
          script:
              - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh
                -r"

        - name: clang7 debug
          env:
              - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_clang7
          script:
              - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh"

        - name: clang8 debug
          env:
              - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_clang8
          script:
              - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh"

        - name: clang9 debug
          env:
              - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_clang9
          script:
              - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh"

        - name: clang9 release
          env:
              - DOCKER_IMAGE=bbvch/conan_qt-5.14.2_builder_clang9
          script:
              - docker run -t -v ${TRAVIS_BUILD_DIR}:${DOCKER_WORKDIR} -w ${DOCKER_WORKDIR} ${DOCKER_IMAGE} /bin/bash -c "${CONAN_UPDATE_CMD} && ./build.sh
                -r"

        - language: nix
          name: nix build ninja gcc10
          env:
              - CONAN_USER_HOME="${HOME}/.conan"
          script:
              - nix-shell --command "cmake -S ${TRAVIS_BUILD_DIR} --preset=linux-ninja"
              - nix-shell --command "cmake --build --preset=linux-build"

        - language: nix
          name: nix build ninja clang11
          env:
              - CONAN_USER_HOME="${HOME}/.conan-clang11"
          script:
              - nix-shell --command "cmake -S ${TRAVIS_BUILD_DIR} --preset=linux-ninja-clang"
              - nix-shell --command "cmake --build --preset=linux-build"
