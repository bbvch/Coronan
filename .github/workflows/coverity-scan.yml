---
name: Coverity Scan

on:
    push:
        branches: [master]

jobs:
    coverity-scan:
        runs-on: ubuntu-latest
        env:
            CXX: g++
            CC: gcc
            TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
            PROJECT: bbvch%2FCoronan
            EMAIL: estermann.michel@gmail.com
            CA_CERT: ca-coverity.pem
        steps:
            - uses: actions/checkout@v4
            - name: Cache (Conan)
              uses: actions/cache@v4
              with:
                  path: ~/.conan2/p
                  key: cache-coverity-scan-conan-${{ hashFiles('conanfile.txt') }}
                  restore-keys: |
                      cache-coverity-scan-conan
            - name: Cache (ccache)
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/ccache
                  key: ccache-coverity-scan-${{ hashFiles('**/CMakeLists.txt') }}
                  restore-keys: |
                      ccache-coverity-scan
            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y --no-install-recommends ninja-build dpkg pkg-config
                  sudo apt-get install -y --no-install-recommends qt6-base-dev qt6-tools-dev qt6-tools-dev-tools libqt6charts6 libqt6charts6-dev libqt6opengl6 libqt6opengl6-dev '^libxcb.*-dev' libgles2-mesa-dev libx11-xcb-dev libgl1-mesa-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - name: Install python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r py-requirements.txt
            - name: Set conan compiler env
              run: conan profile detect
            - name: conan install
              run: conan install . --build=missing --settings=build_type=Debug --settings=compiler.cppstd=17
            - name: CMake configure
              run: cmake -S . -B ./build -G "Ninja" -DCMAKE_BUILD_TYPE=Debug
            - name: Install Coverity scan certificate
              run: |
                  echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | tee ${CA_CERT}
              shell: bash
            - name: Download Coverity Build Tool
              run: |
                  wget --ca-certificate=${CA_CERT} -nv \
                    --post-data "token=${TOKEN}&project=${PROJECT}" \
                    -O cov-analysis.tar.gz \
                    https://scan.coverity.com/download/cxx/linux64
                  mkdir cov-analysis
                  tar -xzf cov-analysis.tar.gz --strip 1 -C cov-analysis
              shell: bash
            - name: Build with cov-build
              run: |
                  export PATH="${PWD}/cov-analysis/bin:${PATH}"
                  cov-build --dir cov-int cmake --build ./build
              shell: bash
            - name: Submit results to Coverity Scan
              run: |
                  tar -czvf cov-int.tgz cov-int
                  curl \
                    --cacert ${CA_CERT} \
                    --form project="${PROJECT}" \
                    --form token="${TOKEN}" \
                    --form email="${EMAIL}" \
                    --form file=@cov-int.tgz \
                    --form version="${{ github.sha }}" \
                    --form description="coverity-scan ${{ github.repository }} / ${{ github.ref }}" \
                    "https://scan.coverity.com/builds?project=${PROJECT}"
              shell: bash
