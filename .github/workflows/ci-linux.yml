---
name: Linux Builds

on:
    push:
    pull_request:
    release:
        types: [published]

jobs:
    ci:
        name: ${{ matrix.name }}
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: ubuntu-22.04-clang-13
                      os: ubuntu-22.04
                      build_type: Release
                      compiler: clang++-13
                      ccompiler: clang-13
                      clang-tidy: clang-tidy-13
                      generator: Ninja
                      coverage: OFF
                      download_qt: OFF
                    - name: ubuntu-22.04-clang-14
                      os: ubuntu-22.04
                      build_type: Release
                      compiler: clang++-14
                      ccompiler: clang-14
                      clang-tidy: clang-tidy-14
                      generator: Ninja
                      coverage: OFF
                      download_qt: OFF
                    - name: ubuntu-22.04-clang-15
                      os: ubuntu-22.04
                      build_type: Release
                      compiler: clang++-15
                      ccompiler: clang-15
                      clang-tidy: clang-tidy-15
                      generator: Ninja
                      coverage: OFF
                      download_qt: OFF
                    - name: ubuntu-22.04-gcc-12
                      os: ubuntu-22.04
                      build_type: Debug
                      compiler: g++-12
                      ccompiler: gcc-12
                      clang-tidy: clang-tidy
                      generator: Ninja
                      coverage: OFF
                      download_qt: OFF
                    - name: ubuntu-24.04-clang-16
                      os: ubuntu-24.04
                      build_type: Release
                      compiler: clang++-16
                      ccompiler: clang-16
                      clang-tidy: clang-tidy-16
                      generator: Ninja
                      coverage: OFF
                      download_qt: OFF
                    - name: ubuntu-24.04-clang-17
                      os: ubuntu-24.04
                      build_type: Release
                      compiler: clang++-17
                      ccompiler: clang-17
                      clang-tidy: clang-tidy-17
                      generator: Ninja
                      coverage: OFF
                      download_qt: OFF
                    - name: ubuntu-24.04-clang-18
                      os: ubuntu-24.04
                      build_type: Release
                      compiler: clang++-18
                      ccompiler: clang-18
                      clang-tidy: clang-tidy-18
                      generator: Ninja
                      coverage: OFF
                      download_qt: OFF
                    - name: ubuntu-24.04-clang-18-download-qt
                      os: ubuntu-24.04
                      build_type: Release
                      compiler: clang++-18
                      ccompiler: clang-18
                      clang-tidy: clang-tidy-18
                      generator: Ninja
                      coverage: OFF
                      download_qt: ON
                    - name: ubuntu-24.04-gcc-13
                      os: ubuntu-24.04
                      build_type: Debug
                      compiler: g++-13
                      ccompiler: gcc-13
                      clang-tidy: clang-tidy
                      generator: Ninja
                      coverage: ON
                      download_qt: OFF
                    - name: ubuntu-24.04-gcc-14
                      os: ubuntu-24.04
                      build_type: Debug
                      compiler: g++-14
                      ccompiler: gcc-14
                      clang-tidy: clang-tidy
                      generator: Ninja
                      coverage: OFF
                      download_qt: OFF
                    - name: ubuntu-24.04-gcc-14-download-qt
                      os: ubuntu-24.04
                      build_type: Debug
                      compiler: g++-14
                      ccompiler: gcc-14
                      clang-tidy: clang-tidy
                      generator: Ninja
                      coverage: OFF
                      download_qt: ON
                    - name: ubuntu-latest
                      os: ubuntu-latest
                      build_type: Debug
                      compiler: g++
                      ccompiler: gcc
                      clang-tidy: clang-tidy
                      generator: Ninja
                      coverage: OFF
                      download_qt: OFF

        env:
            CXX: ${{ matrix.compiler }}
            CC: ${{ matrix.ccompiler }}

        steps:
            - uses: actions/checkout@v4
            - name: Cache (Conan)
              uses: actions/cache@v4
              with:
                  path: ~/.conan2/p
                  key: cache-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-conan-${{ hashFiles('conanfile.txt') }}
                  restore-keys: |
                      cache-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-conan
            - name: Cache (ccache)
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/ccache
                  key: ccache-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-${{ matrix.generator }}-${{ hashFiles('**/CMakeLists.txt')
                      }}
                  restore-keys: |
                      ccache-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y --no-install-recommends ccache ninja-build ${{ matrix.clang-tidy }} dpkg pkg-config doxygen lcov
                  sudo apt-get install -y --no-install-recommends libgl1-mesa-dev freeglut3-dev
            - name: Install Qt
              if: matrix.download_qt == 'OFF'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y --no-install-recommends qt6-base-dev qt6-tools-dev qt6-tools-dev-tools libqt6charts6 libqt6charts6-dev libqt6opengl6 libqt6opengl6-dev '^libxcb.*-dev' libgles2-mesa-dev libx11-xcb-dev libgl1-mesa-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - name: Install python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r py-requirements.txt
            - name: Set conan compiler env
              run: conan profile detect
            - name: conan install
              run: conan install . --build=missing --settings=build_type=${{ matrix.build_type }} --settings=compiler.cppstd=17
            - name: CMake configure
              run: |
                  cmake -S . -B ./build -G "${{ matrix.generator }}" \
                  -DDOWNLOAD_QT6=${{ matrix.download_qt }} \
                  -DENABLE_COVERAGE=${{ matrix.coverage }} \
                  -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
            - name: CMake build
              run: cmake --build ./build --config ${{ matrix.build_type }}
            - name: CTest
              run: ctest -C Debug
              working-directory: ./build
            - name: CMake build docs
              run: cmake --build ./build --target docs --config ${{ matrix.build_type }}
            - name: CMake build package
              run: cmake --build ./build --target package --config ${{ matrix.build_type }}
            - name: Coverage
              if: matrix.coverage == 'ON'
              run: |
                  lcov --capture --directory . --output-file coverage.info
                  lcov --remove coverage.info '/usr/*' --output-file coverage.info
                  bash <(curl -s https://codecov.io/bash) -f coverage.info || echo 'Codecov did not collect coverage reports'
                  export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }}
                  bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.info || echo 'codacy did not collect coverage reports'
            - uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.name }}-artifacts
                  path: |
                      ./build/Coronan-*.deb
                      ./build/Coronan-*.tar.gz
