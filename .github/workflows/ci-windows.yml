---
name: Windows Builds

on:
    push:
    pull_request:
    release:
        types: [published]

jobs:
    ci:
        name: ${{ matrix.name }}
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: windows-2022-VS-2022
                      os: windows-2022
                      build_type: Release
                      cppcompiler: cl
                      ccompiler: cl
                      generators: Visual Studio 17 2022
                    - name: windows-2022-gcc
                      os: windows-2022
                      build_type: Release
                      cppcompiler: g++
                      ccompiler: gcc
                      generators: Ninja
                    - name: windows-2025-VS-2022
                      os: windows-2025
                      build_type: Release
                      cppcompiler: cl
                      ccompiler: cl
                      generators: Visual Studio 17 2022
                    - name: windows-2025-gcc
                      os: windows-2025
                      build_type: Release
                      cppcompiler: g++
                      ccompiler: gcc
                      generators: Ninja

        env:
            CXX: ${{ matrix.cppcompiler }}
            CC: ${{ matrix.ccompiler }}

        steps:
            - uses: actions/checkout@v4
            - name: Install dependencies
              run: |
                  choco install doxygen.install
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - name: Install python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r py-requirements.txt
            - name: Install Qt
              uses: jurplel/install-qt-action@v4
              with:
                  version: 6.8.3
                  host: windows
                  target: desktop
                  arch: win64_msvc2022_64
                  modules: qtcharts
                  tools: tools_ifw
            - name: setup-msvc-dev
              if: matrix.cppcompiler == 'cl'
              uses: TheMrMilchmann/setup-msvc-dev@v3
              with:
                  arch: x64
            - name: Set conan compiler env
              run: conan profile detect
            - name: conan install
              run: conan install . --build=missing --settings=build_type=${{ matrix.build_type }} --settings=compiler.cppstd=17
            - name: CMake configure
              run: |
                  cmake -S . -B ./build -G "${{ matrix.generators }}"
            - name: CMake build
              run: cmake --build ./build --config ${{ matrix.build_type }}
            - name: CTest
              run: ctest -C Debug
              working-directory: ./build
            - name: CMake build docs
              run: cmake --build ./build --target doxygen-docs --config ${{ matrix.build_type }}
            - name: CMake build package
              run: cmake --build ./build --target package --config ${{ matrix.build_type }}
            - uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.name }}-artifacts
                  path: |
                      ./build/Coronan-*.zip
                      ./build/Coronan-*.msi
