---
name: Windows Builds

on:
    push:
    pull_request:
    release:
        types: [published]

jobs:
    ci:
        name: ${{ matrix.name }}
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: windows-VS-2019
                      os: windows-2019
                      build_type: Release
                      compiler: cl
                      ccompiler: cl
                      generators: Visual Studio 16 2019
                    - name: windows-VS-2022
                      os: windows-2022
                      build_type: Release
                      compiler: cl
                      ccompiler: cl
                      generators: Visual Studio 17 2022

        env:
            CXX: ${{ matrix.compiler }}
            CC: ${{ matrix.ccompiler }}

        steps:
            - uses: actions/checkout@v2
            - name: Install dependencies
              run: |
                  choco install ninja cmake doxygen.install
            - name: Python pip Cache
              uses: actions/cache@v2
              with:
                  path: C:/Users/runneradmin/appdata/local/pip/cache
                  key: pip-${{ matrix.name }}-${{ hashFiles('py-requirements.txt') }}
            - name: Install python dependencies
              run: |
                  python3 -m pip install --upgrade pip
                  python3 -m pip install -r py-requirements.txt
            - name: Install Qt
              uses: jurplel/install-qt-action@v2
              with:
                  version: 5.15.2
                  host: windows
                  target: desktop
                  modules: qtcharts
                  tools: tools_ifw,4.0,qt.tools.ifw.40
            - name: Conan Cache
              uses: actions/cache@v2
              with:
                  path: |
                      C:/Users/runneradmin/.conan/data
                  key: conan-${{ matrix.name }}-${{ hashFiles('**/Conan.cmake') }}
            - name: Create build dir
              run: mkdir build
            - name: CMake configure
              run: cmake -S . -B ./build -G "${{ matrix.generators }}" -DENABLE_COVERAGE=${{ matrix.coverage }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type
                  }}
            - name: CMake build
              run: cmake --build ./build --config ${{ matrix.build_type }}
            - name: CTest
              run: ctest -C Debug
              working-directory: ./build
            - name: CMake build docs
              run: cmake --build ./build --target docs --config ${{ matrix.build_type }}
            - name: CMake build package
              run: cmake --build ./build --target package --config ${{ matrix.build_type }}
            - uses: actions/upload-artifact@v2
              with:
                  name: ${{ matrix.name }}-artifacts
                  path: |
                      ./build/Coronan-*.zip
                      ./build/Coronan-*.msi
