---
name: CI

on:
    push:
    pull_request:
    release:
        types: [published]

jobs:
    ci:
        name: ${{ matrix.name }}
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: ubuntu-latest-gcc
                      os: ubuntu-latest
                      build_type: Release
                      compiler: g++
                      ccompiler: gcc
                      generators: "Ninja"

                    - name: ubuntu-latest-clang
                      os: ubuntu-latest
                      build_type: Release
                      compiler: clang++
                      ccompiler: clang
                      generators: "Ninja"

                    - name: windows-latest-msvc
                      os: windows-latest
                      build_type: Release
                      compiler: cl
                      ccompiler: cl
                      generators: "Visual Studio 16 2019"
                      arch: 'win64_msvc2019_64'

                    - name: windows-latest-mingw
                      os: windows-latest
                      build_type: Release
                      compiler: g++
                      ccompiler: gcc
                      generators: "Ninja"
                      arch: 'win64_mingw81'
                    
        env:
            CXX: ${{ matrix.compiler }}
            CC: ${{ matrix.ccompiler }}

        steps:
            - uses: actions/checkout@v1
            - name: Install dependencies (Linux)
              if: runner.os == 'Linux'
              run: |
                  sudo apt-get install -y --no-install-recommends ninja-build clang-tidy python3-pip python3-setuptools libqt5charts5-dev libglib2.0-dev
                  sudo apt-get install -y --no-install-recommends dpkg pkg-config doxygen
                  ninja --version
                  cmake --version
                  gcc --version
            - name: Install dependencies (Windows)
              if: runner.os == 'Windows'
              run: |
                choco install ninja cmake doxygen.install
                ninja --version
                cmake --version
            - name: Install Qt (Windows)
              if: runner.os == 'Windows'
              uses: jurplel/install-qt-action@v2
              with:
                version: '5.15.2'
                host: 'windows'
                target: 'desktop'
                arch: ${{ matrix.arch }}
                modules: 'qtcharts'
                tools: 'tools_ifw,4.0,qt.tools.ifw.40'
            - name: Install python dependencies
              run: |
                python3 -m pip install conan
                python3 -m pip install sphinx 
                python3 -m pip install sphinx_rtd_theme 
                python3 -m pip install breathe
                conan --version
            - name: Create build dir
              run: mkdir build
            - name: CMake configure
              run: cmake -G "${{ matrix.generators }}" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
              working-directory: ./build
            - name: CMake build
              run: cmake --build ./build --config ${{ matrix.build_type }}
            - name: CTest
              run: ctest -C Debug
              working-directory: ./build
            - name: CMake build docs
              run: cmake --build ./build --target docs --config ${{ matrix.build_type }}
            - name: CMake build package
              run: cmake --build ./build --target package --config ${{ matrix.build_type }}
