---
parse:
    additional_commands:
        _add_layer_library:
            pargs: 2+
            kwargs:
                FORBIDDEN: '*'
                LINK_LIBS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
                INCLUDE_DIRS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
        add_infrastructure_library:
            pargs: 2+
            kwargs:
                LINK_LIBS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
                INCLUDE_DIRS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
        add_application_library:
            pargs: 2+
            kwargs:
                LINK_LIBS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
                INCLUDE_DIRS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
        add_domain_library:
            pargs: 2+
            kwargs:
                LINK_LIBS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
                INCLUDE_DIRS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
        add_libs_library:
            pargs: 2+
            kwargs:
                LINK_LIBS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
                INCLUDE_DIRS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
        add_utils_library:
            pargs: 2+
            kwargs:
                LINK_LIBS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
                INCLUDE_DIRS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
        add_mock_library:
            pargs: 2+
            kwargs:
                MOCKS: '*'
        add_interface_library:
            pargs: 2
        enable_coverage:
            pargs: 1
        enable_doxygen:
            pargs: 1
        generate_arc42_documentation:
            pargs: 1
        add_unit_test:
            pargs: 2+
            kwargs:
                LINK_LIBS:
                    kwargs:
                        PUBLIC: '*'
                        PRIVATE: '*'
        enable_sanitizers:
            pargs: 1
        enable_static_analysis:
            pargs: 1

format:
    tab_size: 4
    separate_ctrl_name_with_space: false
    separate_fn_name_with_space: false
    dangle_parens: true
    dangle_align: prefix
    line_ending: unix
    line_width: 120
    # If an argument group contains more than this many sub-groups
    # (parg or kwarg groups) then force it to a vertical layout.
    max_subgroups_hwrap: 2
    # If a positional argument group contains more than this many
    # arguments, then force it to a vertical layout
    max_pargs_hwrap: 6
    # If a cmdline positional group consumes more than this many
    # lines without nesting, then invalidate the layout (and nest)
    max_rows_cmdline: 1
    enable_sort: true
    # If true, the parsers may infer whether or not an argument
    # list is sortable (without annotation).
    autosort: false

    # If the statement spelling length (including space and
    # parenthesis) is smaller than this amount, then force reject
    # nested layouts.
    min_prefix_chars: 4
    # If the statement spelling length (including space and
    # parenthesis) is larger than the tab width by more than this
    # amount, then force reject un-nested layouts.
    max_prefix_chars: 10
    # If a candidate layout is wrapped horizontally but it exceeds
    # this many lines, then reject the layout.
    max_lines_hwrap: 4
    command_case: canonical
    keyword_case: upper

markup:
    enable_markup: false

lint:
    disabled_codes: []
    function_pattern: '[0-9a-z_]+'
    macro_pattern: '[0-9A-Z_]+'
    global_var_pattern: '[0-9A-Z][0-9A-Z_]+'
    internal_var_pattern: _[0-9A-Z][0-9A-Z_]+
    local_var_pattern: '[0-9a-z_]+'
    private_var_pattern: _[0-9a-z_]+
    public_var_pattern: '[0-9A-Z][0-9A-Z_]+'
    keyword_pattern: '[0-9A-Z_]+'
    max_conditionals_custom_parser: 2
    min_statement_spacing: 1
    max_statement_spacing: 1
    max_returns: 6
    max_branches: 12
    max_arguments: 5
    max_localvars: 15
    max_statements: 50

encode:
    emit_byteorder_mark: false
    input_encoding: utf-8
    output_encoding: utf-8
